
#ifndef mwin_h
#define mwin_h

#include <NDS.h>

#include "unicode.h"

#include "rect.h"

#define WM_About (0)
#define WM_Help (1)
#define WM_PlayControl (2)
#define WM_FileSelect (3)
#define WM_DateTime (4)
#define WM_PicView (5)
#define WM_TextView (6)
#define WM_Progress (7)
#define WM_SetNext (8)
#define WM_FileInfo (9)
#define WinBodyCount (10)

extern bool RequestFileCloseFromMWin;

typedef struct {
  bool Enabled;
  bool isV;
  TRect ClientRect;
  s32 GripMax,GripSize,GripPos;
} TSBar;

typedef struct {
  u32 WinMode;
  bool DynamicAllocMem;
  bool Visible;
  bool SubDisplay;
  bool TopFlag;
  u32 Priority;
  char TitleStr[128];
  TRect Rect;
  TRect ClientRect;
  u16 *WinBuf;
  u16 ClientBGColor;
  TSBar SBarV,SBarH;
  bool CloseButton;
} TWinBody;

#define TitleBarHeight (12+(1*2))

typedef struct {
  u16 *pDesktopBM;
  u32 DesktopBM_W,DesktopBM_H;
  u16 *pTitleABM,*pTitleDBM;
  u32 TitleBM_W,TitleBM_H;
  u16 *pClientBM;
  u32 ClientBM_W,ClientBM_H;
  u32 CloseBtnBM_W,CloseBtnBM_H;
  u16 *pCloseBtnBM;
  u16 *pFileBM;
  u32 FileBM_W,FileBM_H;
  u16 *pTextBM;
  u32 TextBM_W,TextBM_H;
  u16 *pPrgBarABM,*pPrgBarDBM;
  u32 PrgBarBM_W,PrgBarBM_H;
  u16 *pSB_BGBM,*pSB_BodyBM,*pSB_PartBM;
  u32 *pFileBarCurrentBM32,*pFileBarPlayBM32;
  u32 FileBarBM32_W,FileBarBM32_H;
   u16 *pMp3Icon;
  u32 mp3BM_W,mp3BM_H;
  u16 *ppDesktopBnBM;
  u32 DesktopBnBM_W,DesktopBnBM_H;
  u16 *pConfigBM;
  u32 ConfigBM_W,ConfigBM_H;
  u16 *pCheckedBM;
  u32 CheckedBM_W,CheckedBM_H;
  u16 *pCheckBM;
  u32 CheckBM_W,CheckBM_H;
  u16 *pHelpBM;
  u32 HelpBM_W,HelpBM_H;
} TSkinBM;

extern void ImageControlTimeOut_SetDefault(u32 sec);
extern void ImageControlTimeOut_ProcReset(void);
extern void ImageControlTimeOut_ProcVSync(u32 VsyncCount);

extern void MWin_Init(void);
extern void MWin_Free(void);
extern void MWin_AllRefresh(void);
extern void MWin_AllTrans(void);

extern void MWin_AllocMem(u32 WinIndex);
extern void MWin_FreeMem(u32 WinIndex);

extern u32 MWin_SetActive(u32 WinBodyIndex);
extern u32 MWin_SetActiveTopMost(void);
extern void MWin_RefreshScreenMask(void);
extern void MWin_DrawTitleBar(u32 WinIndex);
extern void MWin_DrawClientFrame(u32 WinIndex);
extern void MWin_DrawClientBG(u32 WinIndex);
extern void MWin_DrawClient(u32 WinIndex);
extern void MWin_DrawSBarVH(u32 WinIndex);
extern void MWin_TransWindow(u32 WinIndex);
extern void MWin_ClearDesktop(void);
extern void MWin_RefreshWindow(u32 WinIndex);

extern void MWin_SetVisible(u32 WinIndex,bool Visible);
extern bool MWin_GetVisible(u32 WinIndex);

extern void MWin_SetWindowTitle(u32 WinIndex,char *TitleStr);
extern void MWin_PlayControl_SetWindowTitleW(UnicodeChar *TitleStrW);

extern TWinBody* MWin_GetWinBody(u32 WinIndex);

extern u32 MWin_GetWindowIndexFromPos(s32 x,s32 y);
extern u32 MWin_GetTopWinIndex(void);

extern s32 MWin_GetClientWidth(u32 WinIndex);
extern s32 MWin_GetClientHeight(u32 WinIndex);

extern s32 MWin_ProgressMax;
extern s32 MWin_ProgressPosition;

extern void MWin_ProgressShow(char *TitleStr,s32 _Max);
extern void MWin_ProgressSetPos(s32 _Position);
extern void MWin_ProgressHide(void);

extern void MWin_SetSBarV(u32 WinIndex,s32 GripMax,s32 GripSize,s32 GripPos);
extern void MWin_SetSBarH(u32 WinIndex,s32 GripMax,s32 GripSize,s32 GripPos);
extern void MWin_SetSBarVPos(u32 WinIndex,s32 GripPos);
extern void MWin_SetSBarHPos(u32 WinIndex,s32 GripPos);
extern s32 MWin_GetSBarVPos(u32 WinIndex);
extern s32 MWin_GetSBarHPos(u32 WinIndex);

extern void MWin_MouseDown(s32 x,s32 y);
extern void MWin_MouseMove(s32 x,s32 y);
extern void MWin_MouseUp(void);

extern void MWinCallAbout_Draw(TWinBody *pwb);
extern void MWinCallHelp_Draw(TWinBody *pwb);
extern void MWinCallPlayControl_Draw(TWinBody *pwb,TSkinBM *pSkinBM);
extern void MWinCallFileSelect_Draw(TWinBody *pwb,TSkinBM *pSkinBM);
extern void MWinCallDateTime_Draw(TWinBody *pwb);
extern void MWinCallPicView_Draw(TWinBody *pwb);
extern void MWinCallTextView_Draw(TWinBody *pwb);
extern void MWinCallProgress_Draw(TWinBody *pwb,TSkinBM *pSkinBM);
extern void MWinCallSetNext_Draw(TWinBody *pwb);
extern void MWinCallFileInfo_Draw(TWinBody *pwb);

extern void MWinCallAbout_CloseButton(u32 WinIndex);
extern void MWinCallHelp_CloseButton(u32 WinIndex);
extern void MWinCallPlayControl_CloseButton(u32 WinIndex);
extern void MWinCallFileSelect_CloseButton(u32 WinIndex);
extern void MWinCallDateTime_CloseButton(u32 WinIndex);
extern void MWinCallPicView_CloseButton(u32 WinIndex);
extern void MWinCallTextView_CloseButton(u32 WinIndex);
extern void MWinCallProgress_CloseButton(u32 WinIndex);
extern void MWinCallSetNext_CloseButton(u32 WinIndex);
extern void MWinCallFileInfo_CloseButton(u32 WinIndex);

extern void MWinCallAbout_MouseDown(u32 WinIndex,s32 x,s32 y);
extern void MWinCallHelp_MouseDown(u32 WinIndex,s32 x,s32 y);
extern void MWinCallPlayControl_MouseDown(u32 WinIndex,s32 x,s32 y);
extern void MWinCallFileSelect_MouseDown(u32 WinIndex,s32 x,s32 y);
extern void MWinCallDateTime_MouseDown(u32 WinIndex,s32 x,s32 y);
extern void MWinCallPicView_MouseDown(u32 WinIndex,s32 x,s32 y);
extern void MWinCallTextView_MouseDown(u32 WinIndex,s32 x,s32 y);
extern void MWinCallProgress_MouseDown(u32 WinIndex,s32 x,s32 y);
extern void MWinCallSetNext_MouseDown(u32 WinIndex,s32 x,s32 y);
extern void MWinCallFileInfo_MouseDown(u32 WinIndex,s32 x,s32 y);

extern void MWinCallAbout_MouseMove(u32 WinIndex,s32 x,s32 y);
extern void MWinCallHelp_MouseMove(u32 WinIndex,s32 x,s32 y);
extern void MWinCallPlayControl_MouseMove(u32 WinIndex,s32 x,s32 y);
extern void MWinCallFileSelect_MouseMove(u32 WinIndex,s32 x,s32 y);
extern void MWinCallDateTime_MouseMove(u32 WinIndex,s32 x,s32 y);
extern void MWinCallPicView_MouseMove(u32 WinIndex,s32 x,s32 y);
extern void MWinCallTextView_MouseMove(u32 WinIndex,s32 x,s32 y);
extern void MWinCallProgress_MouseMove(u32 WinIndex,s32 x,s32 y);
extern void MWinCallSetNext_MouseMove(u32 WinIndex,s32 x,s32 y);
extern void MWinCallFileInfo_MouseMove(u32 WinIndex,s32 x,s32 y);

extern void MWinCallAbout_MouseUp(u32 WinIndex,s32 x,s32 y);
extern void MWinCallHelp_MouseUp(u32 WinIndex,s32 x,s32 y);
extern void MWinCallPlayControl_MouseUp(u32 WinIndex,s32 x,s32 y);
extern void MWinCallFileSelect_MouseUp(u32 WinIndex,s32 x,s32 y);
extern void MWinCallDateTime_MouseUp(u32 WinIndex,s32 x,s32 y);
extern void MWinCallPicView_MouseUp(u32 WinIndex,s32 x,s32 y);
extern void MWinCallTextView_MouseUp(u32 WinIndex,s32 x,s32 y);
extern void MWinCallProgress_MouseUp(u32 WinIndex,s32 x,s32 y);
extern void MWinCallSetNext_MouseUp(u32 WinIndex,s32 x,s32 y);
extern void MWinCallFileInfo_MouseUp(u32 WinIndex,s32 x,s32 y);

extern void MWin_InitVideoOverlay(void);
extern void MWin_SetVideoWideFlag(bool w);
extern void MWin_SetVideoOverlay(bool e);
extern void MWin_ClearVideoOverlay(void);
extern void MWin_SetVideoOverlaySize(u32 w,u32 h,float ratio);
extern void MWin_SetVideoFullScreen(bool e);
extern bool MWin_GetVideoFullScreen(void);
extern void MWin_RefreshVideoFullScreen(bool IgnoreRect);

extern void MWin_ShowHelpDialog();
extern void MWin_ShowDesktop();
extern void MWin_ShowNdsRomIcon(uint32 *bm,uint16 *pal,uint32 xOff,uint32 yOff,const UnicodeChar *str);
extern void MWin_ShowConfigDialog();
extern void MWIn_ShowSelcetItem(u8 language,u8 speedAuto,u8 focusIndex,u16 speed,u16 speedDefault);
#endif

